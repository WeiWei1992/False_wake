2020-07-14 16:01:36,183 ui.py[line:86] INFO xxxxxxxxxxx
2020-07-14 16:03:57,787 ui.py[line:88] INFO xxxxxxxxxxx
2020-07-14 16:04:12,462 ui.py[line:39] INFO 点击开始测试按钮，开始测试
2020-07-14 16:04:12,472 ui.py[line:46] INFO 获取到的日志提取间隔是： 60
2020-07-14 16:04:12,472 ui.py[line:51] INFO 获取到的测试总时长是： 10
2020-07-14 16:04:25,334 ui.py[line:88] INFO xxxxxxxxxxx
2020-07-14 16:04:44,452 ui.py[line:88] INFO xxxxxxxxxxx
2020-07-14 16:04:47,229 ui.py[line:39] INFO 点击开始测试按钮，开始测试
2020-07-14 16:04:47,229 ui.py[line:46] INFO 获取到的日志提取间隔是： 提取日志间隔,单位(min)
2020-07-14 16:04:47,229 ui.py[line:51] INFO 获取到的测试总时长是： 
2020-07-14 16:16:07,226 ui.py[line:39] INFO 点击开始测试按钮，开始测试
2020-07-14 16:16:07,228 ui.py[line:42] INFO 获取到的日志提取间隔是： 提取日志间隔,单位(min)
2020-07-14 16:16:07,228 ui.py[line:45] INFO 获取到的测试总时长是： 
2020-07-14 16:16:31,180 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-14 16:16:31,180 ui.py[line:43] INFO 获取到的日志提取间隔是： 提取日志间隔,单位(min)
2020-07-14 16:16:31,180 ui.py[line:46] INFO 获取到的测试总时长是： 
2020-07-14 16:16:42,644 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-14 16:16:42,645 ui.py[line:43] INFO 获取到的日志提取间隔是： 提取日志间隔,单位(min)
2020-07-14 16:16:42,645 ui.py[line:46] INFO 获取到的测试总时长是： 
2020-07-14 16:17:10,459 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-14 16:17:10,460 ui.py[line:43] INFO 获取到的日志提取间隔是： 提取日志间隔,单位(min)
2020-07-14 16:17:10,460 ui.py[line:46] INFO 获取到的测试总时长是： 
2020-07-14 16:17:43,370 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-14 16:17:43,371 ui.py[line:43] INFO 获取到的日志提取间隔是： 提取日志间隔,单位(min)
2020-07-14 16:17:43,371 ui.py[line:46] INFO 获取到的测试总时长是： 
2020-07-14 16:29:41,064 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-14 16:29:41,065 ui.py[line:43] INFO 获取到的日志提取间隔是： 10
2020-07-14 16:29:41,065 ui.py[line:46] INFO 获取到的测试总时长是： 80
2020-07-14 16:29:41,065 ui.py[line:49] INFO 获取到的设备id： d
2020-07-14 16:30:10,952 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-14 16:30:10,953 ui.py[line:43] INFO 获取到的日志提取间隔是： 提取日志间隔,单位(min)
2020-07-14 16:30:10,953 ui.py[line:46] INFO 获取到的测试总时长是： a
2020-07-14 16:30:10,953 ui.py[line:49] INFO 获取到的设备id： f
2020-07-14 16:30:19,312 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-14 16:30:19,312 ui.py[line:43] INFO 获取到的日志提取间隔是： 提取日志间隔,单位(min)
2020-07-14 16:30:19,312 ui.py[line:46] INFO 获取到的测试总时长是： a
2020-07-14 16:30:19,312 ui.py[line:49] INFO 获取到的设备id： f
2020-07-14 16:47:51,340 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-14 16:47:51,340 ui.py[line:43] INFO 获取到的日志提取间隔是： 提取日志间隔,单位(min)
2020-07-14 16:47:51,340 ui.py[line:46] INFO 获取到的测试总时长是： 
2020-07-14 16:47:51,340 ui.py[line:49] INFO 获取到的设备id： 
2020-07-14 16:47:51,478 public.py[line:22] INFO adb shell 命令：adb -s None pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_14_16_47_51
2020-07-14 16:48:04,609 public.py[line:22] INFO adb shell 命令：adb -s None pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_14_16_48_04
2020-07-14 16:48:37,668 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-14 16:48:37,668 ui.py[line:43] INFO 获取到的日志提取间隔是： 10
2020-07-14 16:48:37,668 ui.py[line:46] INFO 获取到的测试总时长是： 6
2020-07-14 16:48:37,669 ui.py[line:49] INFO 获取到的设备id： JYZ29809
2020-07-14 16:48:37,669 public.py[line:22] INFO adb shell 命令：adb -s None pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_14_16_48_37
2020-07-14 16:49:59,060 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-14 16:49:59,060 ui.py[line:43] INFO 获取到的日志提取间隔是： 提取日志间隔,单位(min)
2020-07-14 16:49:59,060 ui.py[line:46] INFO 获取到的测试总时长是： 
2020-07-14 16:49:59,060 ui.py[line:49] INFO 获取到的设备id： 
2020-07-14 16:49:59,061 public.py[line:24] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_14_16_49_59
2020-07-14 16:50:12,235 public.py[line:24] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_14_16_50_12
2020-07-14 16:50:25,407 public.py[line:24] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_14_16_50_25
2020-07-14 16:50:38,593 public.py[line:24] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_14_16_50_38
2020-07-14 16:50:51,784 public.py[line:24] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_14_16_50_51
2020-07-14 17:14:59,463 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-14 17:14:59,463 ui.py[line:43] INFO 获取到的日志提取间隔是： 提取日志间隔,单位(min)
2020-07-14 17:14:59,463 ui.py[line:46] INFO 获取到的测试总时长是： 
2020-07-14 17:14:59,464 ui.py[line:49] INFO 获取到的设备id： 
2020-07-14 17:14:59,464 public.py[line:22] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_14_17_14_59
2020-07-14 17:15:12,693 public.py[line:22] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_14_17_15_12
2020-07-14 17:15:25,931 public.py[line:22] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_14_17_15_25
2020-07-14 17:15:39,153 public.py[line:22] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_14_17_15_39
2020-07-14 17:15:52,403 public.py[line:22] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_14_17_15_52
2020-07-21 10:01:00,342 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-21 10:01:00,444 ui.py[line:43] INFO 获取到的日志提取间隔是： 4
2020-07-21 10:01:00,444 ui.py[line:46] INFO 获取到的测试总时长是： 5
2020-07-21 10:01:00,444 ui.py[line:49] INFO 获取到的设备id： JYZ14788
2020-07-21 10:01:00,448 public.py[line:81] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_01_00
2020-07-21 10:01:13,742 public.py[line:81] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_01_13
2020-07-21 10:01:26,997 public.py[line:81] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_01_26
2020-07-21 10:01:40,272 public.py[line:81] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_01_40
2020-07-21 10:01:53,501 public.py[line:81] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_01_53
2020-07-21 10:15:48,826 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-21 10:15:48,826 ui.py[line:43] INFO 获取到的日志提取间隔是： 4
2020-07-21 10:15:48,826 ui.py[line:46] INFO 获取到的测试总时长是： 5
2020-07-21 10:15:48,826 ui.py[line:49] INFO 获取到的设备id： JYZ14788
2020-07-21 10:15:48,827 public.py[line:91] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_15_48
2020-07-21 10:15:57,728 public.py[line:19] INFO 日志转换到了结尾
2020-07-21 10:15:57,729 handle_main.py[line:20] INFO 等待...............
2020-07-21 10:16:17,729 public.py[line:91] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_16_17
2020-07-21 10:16:26,993 public.py[line:19] INFO 日志转换到了结尾
2020-07-21 10:16:26,994 handle_main.py[line:20] INFO 等待...............
2020-07-21 10:16:46,995 public.py[line:91] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_16_46
2020-07-21 10:16:55,900 public.py[line:19] INFO 日志转换到了结尾
2020-07-21 10:16:55,901 handle_main.py[line:20] INFO 等待...............
2020-07-21 10:17:15,901 public.py[line:91] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_17_15
2020-07-21 10:17:24,991 public.py[line:19] INFO 日志转换到了结尾
2020-07-21 10:17:24,992 handle_main.py[line:20] INFO 等待...............
2020-07-21 10:17:44,993 public.py[line:91] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_17_44
2020-07-21 10:17:54,297 public.py[line:19] INFO 日志转换到了结尾
2020-07-21 10:17:54,298 handle_main.py[line:20] INFO 等待...............
2020-07-21 10:20:16,921 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-21 10:20:16,921 ui.py[line:43] INFO 获取到的日志提取间隔是： 5min
2020-07-21 10:20:16,921 ui.py[line:46] INFO 获取到的测试总时长是： 4h
2020-07-21 10:20:16,921 ui.py[line:49] INFO 获取到的设备id： JYZ14788
2020-07-21 10:20:16,923 public.py[line:91] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_20_16
2020-07-21 10:20:45,800 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-21 10:20:45,801 ui.py[line:43] INFO 获取到的日志提取间隔是： 5min
2020-07-21 10:20:45,801 ui.py[line:46] INFO 获取到的测试总时长是： 4h
2020-07-21 10:20:45,801 ui.py[line:49] INFO 获取到的设备id： JYZ14788
2020-07-21 10:20:45,802 public.py[line:91] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_20_45
2020-07-21 10:21:37,088 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-21 10:21:37,089 ui.py[line:43] INFO 获取到的日志提取间隔是： 5min
2020-07-21 10:21:37,089 ui.py[line:46] INFO 获取到的测试总时长是： 4h
2020-07-21 10:21:37,089 ui.py[line:49] INFO 获取到的设备id： JYZ14788
2020-07-21 10:21:37,090 public.py[line:91] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_21_37
2020-07-21 10:21:40,367 public.py[line:19] INFO 日志转换到了结尾
2020-07-21 10:21:40,369 handle_main.py[line:20] INFO 等待...............
2020-07-21 10:22:00,370 public.py[line:91] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_22_00
2020-07-21 10:22:03,849 public.py[line:19] INFO 日志转换到了结尾
2020-07-21 10:22:03,849 handle_main.py[line:20] INFO 等待...............
2020-07-21 10:22:23,850 public.py[line:91] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_22_23
2020-07-21 10:22:27,308 public.py[line:19] INFO 日志转换到了结尾
2020-07-21 10:22:27,309 handle_main.py[line:20] INFO 等待...............
2020-07-21 10:22:47,310 public.py[line:91] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_22_47
2020-07-21 10:22:50,766 public.py[line:19] INFO 日志转换到了结尾
2020-07-21 10:22:50,767 handle_main.py[line:20] INFO 等待...............
2020-07-21 10:23:10,768 public.py[line:91] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_23_10
2020-07-21 10:23:14,211 public.py[line:19] INFO 日志转换到了结尾
2020-07-21 10:23:14,213 handle_main.py[line:20] INFO 等待...............
2020-07-21 10:42:26,276 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-21 10:42:26,277 ui.py[line:43] INFO 获取到的日志提取间隔是： 提取日志间隔,单位(min)
2020-07-21 10:42:26,277 ui.py[line:46] INFO 获取到的测试总时长是： d
2020-07-21 10:42:26,277 ui.py[line:49] INFO 获取到的设备id： JYZ30717
2020-07-21 10:42:26,278 public.py[line:92] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_42_26
2020-07-21 10:42:33,574 public.py[line:20] INFO 日志转换到了结尾
2020-07-21 10:42:33,576 handle_main.py[line:20] INFO 等待...............
2020-07-21 10:42:53,654 public.py[line:164] INFO 正则匹配到了
2020-07-21 10:42:53,654 public.py[line:165] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 10:42:53,654 public.py[line:166] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 10:42:53,654 public.py[line:167] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 10:42:53,673 public.py[line:92] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_42_53
2020-07-21 10:43:00,911 public.py[line:20] INFO 日志转换到了结尾
2020-07-21 10:43:00,912 handle_main.py[line:20] INFO 等待...............
2020-07-21 10:43:20,979 public.py[line:164] INFO 正则匹配到了
2020-07-21 10:43:20,979 public.py[line:165] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 10:43:20,979 public.py[line:166] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 10:43:20,979 public.py[line:167] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 10:43:20,984 public.py[line:92] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_43_20
2020-07-21 10:43:28,292 public.py[line:20] INFO 日志转换到了结尾
2020-07-21 10:43:28,295 handle_main.py[line:20] INFO 等待...............
2020-07-21 10:43:48,360 public.py[line:164] INFO 正则匹配到了
2020-07-21 10:43:48,360 public.py[line:165] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 10:43:48,360 public.py[line:166] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 10:43:48,360 public.py[line:167] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 10:43:48,365 public.py[line:92] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_43_48
2020-07-21 10:43:56,088 public.py[line:20] INFO 日志转换到了结尾
2020-07-21 10:43:56,089 handle_main.py[line:20] INFO 等待...............
2020-07-21 10:44:16,163 public.py[line:164] INFO 正则匹配到了
2020-07-21 10:44:16,164 public.py[line:165] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 10:44:16,164 public.py[line:166] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 10:44:16,164 public.py[line:167] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 10:44:16,168 public.py[line:164] INFO 正则匹配到了
2020-07-21 10:44:16,168 public.py[line:165] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 10:44:16,169 public.py[line:166] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 10:44:16,169 public.py[line:167] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 10:44:16,174 public.py[line:92] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_10_44_16
2020-07-21 10:44:24,079 public.py[line:20] INFO 日志转换到了结尾
2020-07-21 10:44:24,082 handle_main.py[line:20] INFO 等待...............
2020-07-21 10:44:44,145 public.py[line:164] INFO 正则匹配到了
2020-07-21 10:44:44,145 public.py[line:165] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 10:44:44,146 public.py[line:166] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 10:44:44,146 public.py[line:167] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 10:44:44,150 public.py[line:164] INFO 正则匹配到了
2020-07-21 10:44:44,150 public.py[line:165] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 10:44:44,150 public.py[line:166] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 10:44:44,150 public.py[line:167] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 10:44:44,154 public.py[line:164] INFO 正则匹配到了
2020-07-21 10:44:44,155 public.py[line:165] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 10:44:44,155 public.py[line:166] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 10:44:44,155 public.py[line:167] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 12:33:40,153 public.py[line:123] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 12:33:40,161 public.py[line:128] INFO result_tmp_path不存在,忽略
2020-07-21 12:33:40,161 public.py[line:130] INFO result_path: D:\Python_Project\False_wake\Logs/result.txt
2020-07-21 12:33:40,161 public.py[line:135] INFO result_path不存在,忽略
2020-07-21 12:34:29,952 public.py[line:123] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 12:34:29,952 public.py[line:125] INFO resul_tmp_path存在，删除
2020-07-21 12:34:30,026 public.py[line:130] INFO result_path: D:\Python_Project\False_wake\Logs/result.txt
2020-07-21 12:34:30,026 public.py[line:132] INFO result_path 存在，删除
2020-07-21 12:50:48,987 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-21 12:50:48,987 ui.py[line:43] INFO 获取到的日志提取间隔是： 5min
2020-07-21 12:50:48,988 ui.py[line:46] INFO 获取到的测试总时长是： 9h
2020-07-21 12:50:48,988 ui.py[line:49] INFO 获取到的设备id： JYZ30717
2020-07-21 12:50:48,989 public.py[line:126] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 12:50:48,989 public.py[line:128] INFO resul_tmp_path存在，删除
2020-07-21 12:50:48,990 public.py[line:133] INFO result_path: D:\Python_Project\False_wake\Logs/result.txt
2020-07-21 12:50:48,990 public.py[line:135] INFO result_path 存在，删除
2020-07-21 12:50:48,992 public.py[line:92] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_12_50_48
2020-07-21 12:50:55,578 public.py[line:20] INFO 日志转换到了结尾
2020-07-21 12:50:55,580 handle_main.py[line:22] INFO 等待...............
2020-07-21 12:51:15,636 public.py[line:92] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_12_51_15
2020-07-21 12:51:22,269 public.py[line:20] INFO 日志转换到了结尾
2020-07-21 12:51:22,270 handle_main.py[line:22] INFO 等待...............
2020-07-21 12:51:42,332 public.py[line:92] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_12_51_42
2020-07-21 12:51:48,941 public.py[line:20] INFO 日志转换到了结尾
2020-07-21 12:51:48,942 handle_main.py[line:22] INFO 等待...............
2020-07-21 12:52:08,989 public.py[line:177] INFO 正则匹配到了
2020-07-21 12:52:08,989 public.py[line:178] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 12:52:08,989 public.py[line:179] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 12:52:08,989 public.py[line:180] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 12:52:08,997 public.py[line:92] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_12_52_08
2020-07-21 12:52:15,809 public.py[line:20] INFO 日志转换到了结尾
2020-07-21 12:52:15,812 handle_main.py[line:22] INFO 等待...............
2020-07-21 12:52:35,876 public.py[line:177] INFO 正则匹配到了
2020-07-21 12:52:35,876 public.py[line:178] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 12:52:35,876 public.py[line:179] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 12:52:35,877 public.py[line:180] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 12:52:35,881 public.py[line:92] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_12_52_35
2020-07-21 12:52:42,703 public.py[line:20] INFO 日志转换到了结尾
2020-07-21 12:52:42,705 handle_main.py[line:22] INFO 等待...............
2020-07-21 13:01:46,738 ui.py[line:40] INFO 点击开始测试按钮，开始测试
2020-07-21 13:01:46,738 ui.py[line:43] INFO 获取到的日志提取间隔是： 5min
2020-07-21 13:01:46,738 ui.py[line:46] INFO 获取到的测试总时长是： 6h
2020-07-21 13:01:46,739 ui.py[line:49] INFO 获取到的设备id： JYZ30717
2020-07-21 13:01:46,739 public.py[line:126] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 13:01:46,740 public.py[line:131] INFO result_tmp_path不存在,忽略
2020-07-21 13:01:46,740 public.py[line:133] INFO result_path: D:\Python_Project\False_wake\Logs/result.txt
2020-07-21 13:01:46,741 public.py[line:138] INFO result_path不存在,忽略
2020-07-21 13:01:46,741 public.py[line:92] INFO adb shell 命令：adb -s JYZ30717 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_13_01_46
2020-07-21 13:01:54,964 public.py[line:20] INFO 日志转换到了结尾
2020-07-21 13:01:54,965 handle_main.py[line:22] INFO 等待...............
2020-07-21 13:02:15,025 public.py[line:183] INFO 正则匹配到了
2020-07-21 13:02:15,025 public.py[line:184] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:02:15,025 public.py[line:185] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 13:02:15,025 public.py[line:186] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:02:15,027 public.py[line:144] INFO 将结果临时保存到txt中
2020-07-21 13:02:15,028 public.py[line:145] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 13:02:15,045 public.py[line:183] INFO 正则匹配到了
2020-07-21 13:02:15,045 public.py[line:184] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:02:15,045 public.py[line:185] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 13:02:15,045 public.py[line:186] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:02:15,047 public.py[line:144] INFO 将结果临时保存到txt中
2020-07-21 13:02:15,047 public.py[line:145] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 13:02:15,050 public.py[line:183] INFO 正则匹配到了
2020-07-21 13:02:15,051 public.py[line:184] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:02:15,051 public.py[line:185] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 13:02:15,051 public.py[line:186] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:02:15,056 public.py[line:144] INFO 将结果临时保存到txt中
2020-07-21 13:02:15,056 public.py[line:145] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 13:02:15,058 public.py[line:92] INFO adb shell 命令：adb -s JYZ30717 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_13_02_15
2020-07-21 13:02:23,457 public.py[line:20] INFO 日志转换到了结尾
2020-07-21 13:02:23,463 handle_main.py[line:22] INFO 等待...............
2020-07-21 13:02:43,522 public.py[line:183] INFO 正则匹配到了
2020-07-21 13:02:43,522 public.py[line:184] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:02:43,522 public.py[line:185] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 13:02:43,522 public.py[line:186] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:02:43,523 public.py[line:144] INFO 将结果临时保存到txt中
2020-07-21 13:02:43,523 public.py[line:145] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 13:02:43,540 public.py[line:183] INFO 正则匹配到了
2020-07-21 13:02:43,540 public.py[line:184] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:02:43,540 public.py[line:185] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 13:02:43,541 public.py[line:186] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:02:43,543 public.py[line:144] INFO 将结果临时保存到txt中
2020-07-21 13:02:43,543 public.py[line:145] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 13:02:43,547 public.py[line:183] INFO 正则匹配到了
2020-07-21 13:02:43,547 public.py[line:184] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:02:43,547 public.py[line:185] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 13:02:43,547 public.py[line:186] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:02:43,549 public.py[line:144] INFO 将结果临时保存到txt中
2020-07-21 13:02:43,549 public.py[line:145] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 13:02:43,554 public.py[line:92] INFO adb shell 命令：adb -s JYZ30717 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_13_02_43
2020-07-21 13:02:51,957 public.py[line:20] INFO 日志转换到了结尾
2020-07-21 13:02:51,962 handle_main.py[line:22] INFO 等待...............
2020-07-21 13:03:12,033 public.py[line:183] INFO 正则匹配到了
2020-07-21 13:03:12,033 public.py[line:184] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:03:12,033 public.py[line:185] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 13:03:12,033 public.py[line:186] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:03:12,033 public.py[line:144] INFO 将结果临时保存到txt中
2020-07-21 13:03:12,033 public.py[line:145] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 13:03:12,053 public.py[line:183] INFO 正则匹配到了
2020-07-21 13:03:12,053 public.py[line:184] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:03:12,053 public.py[line:185] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 13:03:12,053 public.py[line:186] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:03:12,054 public.py[line:144] INFO 将结果临时保存到txt中
2020-07-21 13:03:12,055 public.py[line:145] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 13:03:12,058 public.py[line:183] INFO 正则匹配到了
2020-07-21 13:03:12,059 public.py[line:184] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:03:12,059 public.py[line:185] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 13:03:12,059 public.py[line:186] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:03:12,060 public.py[line:144] INFO 将结果临时保存到txt中
2020-07-21 13:03:12,060 public.py[line:145] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 13:03:12,066 public.py[line:92] INFO adb shell 命令：adb -s JYZ30717 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_13_03_12
2020-07-21 13:03:20,464 public.py[line:20] INFO 日志转换到了结尾
2020-07-21 13:03:20,469 handle_main.py[line:22] INFO 等待...............
2020-07-21 13:03:40,541 public.py[line:183] INFO 正则匹配到了
2020-07-21 13:03:40,541 public.py[line:184] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:03:40,541 public.py[line:185] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 13:03:40,541 public.py[line:186] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:03:40,541 public.py[line:144] INFO 将结果临时保存到txt中
2020-07-21 13:03:40,542 public.py[line:145] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 13:03:40,559 public.py[line:183] INFO 正则匹配到了
2020-07-21 13:03:40,559 public.py[line:184] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:03:40,559 public.py[line:185] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 13:03:40,560 public.py[line:186] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:03:40,560 public.py[line:144] INFO 将结果临时保存到txt中
2020-07-21 13:03:40,560 public.py[line:145] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 13:03:40,564 public.py[line:183] INFO 正则匹配到了
2020-07-21 13:03:40,564 public.py[line:184] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:03:40,564 public.py[line:185] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 13:03:40,564 public.py[line:186] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:03:40,564 public.py[line:144] INFO 将结果临时保存到txt中
2020-07-21 13:03:40,565 public.py[line:145] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 13:03:40,571 public.py[line:92] INFO adb shell 命令：adb -s JYZ30717 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_21_13_03_40
2020-07-21 13:03:49,151 public.py[line:20] INFO 日志转换到了结尾
2020-07-21 13:03:49,171 handle_main.py[line:22] INFO 等待...............
2020-07-21 13:04:09,223 public.py[line:183] INFO 正则匹配到了
2020-07-21 13:04:09,223 public.py[line:184] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:04:09,223 public.py[line:185] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 13:04:09,223 public.py[line:186] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:04:09,224 public.py[line:144] INFO 将结果临时保存到txt中
2020-07-21 13:04:09,224 public.py[line:145] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 13:04:09,241 public.py[line:183] INFO 正则匹配到了
2020-07-21 13:04:09,241 public.py[line:184] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:04:09,241 public.py[line:185] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 13:04:09,241 public.py[line:186] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:04:09,242 public.py[line:144] INFO 将结果临时保存到txt中
2020-07-21 13:04:09,242 public.py[line:145] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 13:04:09,246 public.py[line:183] INFO 正则匹配到了
2020-07-21 13:04:09,246 public.py[line:184] INFO matchObj_wakeup.group:  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:04:09,246 public.py[line:185] INFO matchObj_wakeup.group(1): (  450:546557583840) DEBUG  
2020-07-21 13:04:09,246 public.py[line:186] INFO 输出该行：  /uaibot(  450:546557583840) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-21 13:04:09,247 public.py[line:144] INFO 将结果临时保存到txt中
2020-07-21 13:04:09,247 public.py[line:145] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 13:32:19,159 public.py[line:153] INFO 处理结果
2020-07-21 13:32:19,160 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:32:19,160 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:32:19,160 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:32:19,160 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:32:19,160 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:32:19,160 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:32:19,160 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:32:19,160 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:32:19,160 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:32:19,160 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:32:19,160 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:32:19,160 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:32:19,160 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:32:19,160 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:32:19,160 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:32:19,160 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:32:19,160 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:32:19,161 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:32:19,161 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:32:19,161 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:32:19,161 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:32:19,161 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:32:19,161 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:32:19,161 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:32:19,161 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:32:19,161 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:32:19,161 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:33:54,979 public.py[line:153] INFO 处理结果
2020-07-21 13:33:54,979 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:33:54,979 public.py[line:163] INFO 列表中没有该行，保存........
2020-07-21 13:33:54,979 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:33:54,979 public.py[line:163] INFO 列表中没有该行，保存........
2020-07-21 13:33:54,979 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:33:54,979 public.py[line:163] INFO 列表中没有该行，保存........
2020-07-21 13:33:54,979 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:33:54,980 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:33:54,980 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:33:54,980 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:33:54,980 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:33:54,980 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:33:54,980 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:33:54,980 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:33:54,980 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:33:54,980 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:33:54,980 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:33:54,980 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:33:54,980 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:33:54,980 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:33:54,980 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:33:54,980 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:33:54,980 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:33:54,980 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:33:54,981 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:33:54,981 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:33:54,981 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:33:54,981 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:33:54,981 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:33:54,981 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:34:28,651 public.py[line:153] INFO 处理结果
2020-07-21 13:34:28,652 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:34:28,652 public.py[line:163] INFO 列表中没有该行，保存........
2020-07-21 13:34:28,652 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:34:28,652 public.py[line:163] INFO 列表中没有该行，保存........
2020-07-21 13:34:28,652 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:34:28,652 public.py[line:163] INFO 列表中没有该行，保存........
2020-07-21 13:34:28,652 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:34:28,652 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:34:28,652 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:34:28,652 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:34:28,652 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:34:28,652 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:34:28,653 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:34:28,653 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:34:28,653 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:34:28,653 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:34:28,653 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:34:28,653 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:34:28,653 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:34:28,653 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:34:28,653 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:34:28,653 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:34:28,653 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:34:28,653 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:34:28,653 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:34:28,653 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:34:28,653 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:34:28,653 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:34:28,653 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:34:28,653 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:39:36,382 public.py[line:153] INFO 处理结果
2020-07-21 13:39:36,382 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:39:36,382 public.py[line:163] INFO 列表中没有该行，保存........
2020-07-21 13:39:36,382 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:39:36,382 public.py[line:163] INFO 列表中没有该行，保存........
2020-07-21 13:39:36,383 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:39:36,383 public.py[line:163] INFO 列表中没有该行，保存........
2020-07-21 13:39:36,383 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:39:36,383 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:39:36,383 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:39:36,383 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:39:36,383 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:39:36,383 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:39:36,383 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:39:36,383 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:39:36,383 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:39:36,383 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:39:36,383 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:39:36,383 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:39:36,383 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:39:36,383 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:39:36,383 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:39:36,384 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:39:36,384 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:39:36,384 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:39:36,384 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:39:36,384 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:39:36,384 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:39:36,384 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:39:36,384 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:39:36,384 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:39:36,384 public.py[line:167] INFO 保存最终结果到: D:\Python_Project\False_wake\Logs/result.txt
2020-07-21 13:40:04,759 public.py[line:153] INFO 处理结果
2020-07-21 13:40:04,760 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:04,760 public.py[line:163] INFO 列表中没有该行，保存........
2020-07-21 13:40:04,760 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:04,760 public.py[line:163] INFO 列表中没有该行，保存........
2020-07-21 13:40:04,760 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:04,760 public.py[line:163] INFO 列表中没有该行，保存........
2020-07-21 13:40:04,760 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:04,760 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:04,760 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:04,760 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:04,760 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:04,760 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:04,760 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:04,760 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:04,761 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:04,761 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:04,761 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:04,761 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:04,761 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:04,761 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:04,761 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:04,761 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:04,761 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:04,761 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:04,761 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:04,761 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:04,761 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:04,761 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:04,761 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:04,761 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:04,761 public.py[line:167] INFO 保存最终结果到: D:\Python_Project\False_wake\Logs/result.txt
2020-07-21 13:40:47,249 public.py[line:153] INFO 处理结果
2020-07-21 13:40:47,249 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:47,249 public.py[line:163] INFO 列表中没有该行，保存........
2020-07-21 13:40:47,249 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:47,249 public.py[line:163] INFO 列表中没有该行，保存........
2020-07-21 13:40:47,249 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:47,249 public.py[line:163] INFO 列表中没有该行，保存........
2020-07-21 13:40:47,249 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:47,250 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:47,250 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:47,250 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:47,250 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:47,250 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:47,250 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:47,250 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:47,250 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:47,250 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:47,250 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:47,250 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:47,250 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:47,250 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:47,250 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:47,250 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:47,250 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:47,250 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:47,250 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:47,251 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:47,251 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:47,251 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:47,251 public.py[line:159] INFO 检查列表中是否有重复的
2020-07-21 13:40:47,251 public.py[line:161] INFO 列表中已存在该行，略过
2020-07-21 13:40:47,251 public.py[line:167] INFO 保存最终结果到: D:\Python_Project\False_wake\Logs/result.txt
2020-07-21 14:33:55,097 public.py[line:133] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-21 14:33:55,130 public.py[line:135] INFO resul_tmp_path存在，移动并重命名
2020-07-21 14:33:55,136 public.py[line:143] INFO result_path: D:\Python_Project\False_wake\Logs/result.txt
2020-07-21 14:33:55,137 public.py[line:145] INFO result_path 存在，移动名重命名
2020-07-22 13:17:59,364 send_email.py[line:95] INFO 邮件发送成功
2020-07-22 13:18:58,310 send_email.py[line:95] INFO 邮件发送成功
2020-07-22 13:21:41,666 send_email.py[line:96] INFO 邮件发送成功
2020-07-22 13:24:27,262 send_email.py[line:22] INFO 开始发送邮件
2020-07-22 13:24:27,290 send_email.py[line:59] INFO 不存在误唤醒，发送格式2
2020-07-22 13:24:27,292 send_email.py[line:88] INFO 没有误唤醒，不发送附件
2020-07-22 13:24:28,199 send_email.py[line:101] INFO 邮件发送成功
2020-07-22 13:25:15,389 send_email.py[line:22] INFO 开始发送邮件
2020-07-22 13:25:15,389 send_email.py[line:59] INFO 不存在误唤醒，发送格式2
2020-07-22 13:25:15,390 send_email.py[line:88] INFO 没有误唤醒，不发送附件
2020-07-22 13:27:57,832 send_email.py[line:22] INFO 开始发送邮件
2020-07-22 13:27:57,832 send_email.py[line:59] INFO 不存在误唤醒，发送格式2
2020-07-22 13:27:57,832 send_email.py[line:88] INFO 没有误唤醒，不发送附件
2020-07-22 13:27:59,345 send_email.py[line:101] INFO 邮件发送成功
2020-07-22 13:27:59,345 send_email.py[line:107] INFO 结束发送邮件
2020-07-22 13:35:08,513 ui.py[line:45] INFO 点击开始测试按钮，开始测试
2020-07-22 13:35:08,521 ui.py[line:48] INFO 获取到的日志提取间隔是： 提取日志间隔,单位(min)
2020-07-22 13:35:08,522 ui.py[line:51] INFO 获取到的测试总时长是： 
2020-07-22 13:35:08,522 ui.py[line:54] INFO 获取到的设备id： 
2020-07-22 13:35:08,522 ui.py[line:57] INFO 获取到的email: 319910390@qq.com;
2020-07-22 13:35:08,522 public.py[line:133] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 13:35:08,523 public.py[line:141] INFO result_tmp_path不存在,忽略
2020-07-22 13:35:08,523 public.py[line:143] INFO result_path: D:\Python_Project\False_wake\Logs/result.txt
2020-07-22 13:35:08,523 public.py[line:150] INFO result_path不存在,忽略
2020-07-22 13:35:08,523 public.py[line:93] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_13_35_08
2020-07-22 13:36:08,998 ui.py[line:45] INFO 点击开始测试按钮，开始测试
2020-07-22 13:36:08,998 ui.py[line:48] INFO 获取到的日志提取间隔是： 提取日志间隔,单位(min)
2020-07-22 13:36:08,998 ui.py[line:51] INFO 获取到的测试总时长是： 
2020-07-22 13:36:08,998 ui.py[line:54] INFO 获取到的设备id： 
2020-07-22 13:36:08,998 ui.py[line:57] INFO 获取到的email: 319910390@qq.com;da
2020-07-22 13:36:08,999 ui.py[line:59] INFO 切割后的email: ['319910390@qq.com', 'da']
2020-07-22 13:36:08,999 public.py[line:133] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 13:36:09,000 public.py[line:141] INFO result_tmp_path不存在,忽略
2020-07-22 13:36:09,000 public.py[line:143] INFO result_path: D:\Python_Project\False_wake\Logs/result.txt
2020-07-22 13:36:09,000 public.py[line:150] INFO result_path不存在,忽略
2020-07-22 13:36:09,000 public.py[line:93] INFO adb shell 命令：adb pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_13_36_09
2020-07-22 15:09:08,892 ui.py[line:45] INFO 点击开始测试按钮，开始测试
2020-07-22 15:09:08,993 ui.py[line:48] INFO 获取到的日志提取间隔是： 20
2020-07-22 15:09:08,994 ui.py[line:51] INFO 获取到的测试总时长是： 5
2020-07-22 15:09:08,994 ui.py[line:54] INFO 获取到的设备id： JYZ9591
2020-07-22 15:09:08,994 ui.py[line:57] INFO 获取到的email: 319910390@qq.com;wei_wei192@yeah.net
2020-07-22 15:09:08,994 ui.py[line:59] INFO 切割后的email: ['319910390@qq.com', 'wei_wei192@yeah.net']
2020-07-22 15:09:08,995 handle_main.py[line:18] INFO 开始处理
2020-07-22 15:09:08,995 handle_main.py[line:19] INFO handle接收到的log_time(分钟)：20
2020-07-22 15:09:08,995 handle_main.py[line:20] INFO handle接收到的test_time(h):5
2020-07-22 15:09:08,995 handle_main.py[line:21] INFO handle接收到的device_id： JYZ9591
2020-07-22 15:09:08,995 handle_main.py[line:22] INFO handle接收到的email: ['319910390@qq.com', 'wei_wei192@yeah.net']
2020-07-22 15:09:08,995 handle_main.py[line:24] INFO log_time分钟转换为秒： 1200
2020-07-22 15:09:08,996 handle_main.py[line:26] INFO test_time小时转换为秒： 1200
2020-07-22 15:09:09,002 handle_main.py[line:36] INFO 首先先记录下开始时间为： 2020-07-22 15:09:08
2020-07-22 15:09:09,002 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:09:09,002 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:09:09
2020-07-22 15:09:09,002 handle_main.py[line:50] INFO 时间间隔为(s): 1
2020-07-22 15:09:09,002 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:09:09,002 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-22 15:14:04,404 ui.py[line:45] INFO 点击开始测试按钮，开始测试
2020-07-22 15:14:04,404 ui.py[line:48] INFO 获取到的日志提取间隔是： 1
2020-07-22 15:14:04,404 ui.py[line:51] INFO 获取到的测试总时长是： 5
2020-07-22 15:14:04,405 ui.py[line:54] INFO 获取到的设备id： JYZ9591
2020-07-22 15:14:04,405 ui.py[line:57] INFO 获取到的email: 319910390@qq.com;wei_wei1992@yeah.net
2020-07-22 15:14:04,406 ui.py[line:59] INFO 切割后的email: ['319910390@qq.com', 'wei_wei1992@yeah.net']
2020-07-22 15:14:04,407 handle_main.py[line:18] INFO 开始处理
2020-07-22 15:14:04,407 handle_main.py[line:19] INFO handle接收到的log_time(分钟)：1
2020-07-22 15:14:04,407 handle_main.py[line:20] INFO handle接收到的test_time(h):5
2020-07-22 15:14:04,407 handle_main.py[line:21] INFO handle接收到的device_id： JYZ9591
2020-07-22 15:14:04,408 handle_main.py[line:22] INFO handle接收到的email: ['319910390@qq.com', 'wei_wei1992@yeah.net']
2020-07-22 15:14:04,408 handle_main.py[line:24] INFO log_time分钟转换为秒： 60
2020-07-22 15:14:04,408 handle_main.py[line:26] INFO test_time小时转换为秒： 300
2020-07-22 15:14:04,410 handle_main.py[line:36] INFO 首先先记录下开始时间为： 2020-07-22 15:14:04
2020-07-22 15:14:04,410 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:14:04,410 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:14:04
2020-07-22 15:14:04,410 handle_main.py[line:50] INFO 时间间隔为(s): 0
2020-07-22 15:14:04,410 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:14:04,410 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-22 15:15:04,412 handle_main.py[line:61] INFO 等待时间结束
2020-07-22 15:15:04,412 handle_main.py[line:62] INFO 提取日志，并转码
2020-07-22 15:15:04,412 public.py[line:62] INFO adb shell 命令：adb -s JYZ9591 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_15_15_04
2020-07-22 15:15:15,687 public.py[line:21] INFO 日志转换到了结尾
2020-07-22 15:15:15,687 handle_main.py[line:65] INFO 开始正则匹配
2020-07-22 15:15:15,784 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:15:15,784 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:15:15,784 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:15:15,784 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:15:15,807 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:15:15,807 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:15:15,813 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:15:15,813 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:15:15,813 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:15:15,813 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:15:15,814 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:15:15,814 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:15:15,819 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:15:15,819 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:15:15,819 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:15:15,820 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:15:15,820 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:15:15,820 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:15:15,828 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:15:15,828 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:15:15
2020-07-22 15:15:15,828 handle_main.py[line:50] INFO 时间间隔为(s): 71
2020-07-22 15:15:15,828 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:15:15,828 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-22 15:16:15,829 handle_main.py[line:61] INFO 等待时间结束
2020-07-22 15:16:15,829 handle_main.py[line:62] INFO 提取日志，并转码
2020-07-22 15:16:15,829 public.py[line:62] INFO adb shell 命令：adb -s JYZ9591 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_15_16_15
2020-07-22 15:16:27,110 public.py[line:21] INFO 日志转换到了结尾
2020-07-22 15:16:27,110 handle_main.py[line:65] INFO 开始正则匹配
2020-07-22 15:16:27,208 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:16:27,208 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:16:27,208 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:16:27,209 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:16:27,212 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:16:27,212 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:16:27,216 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:16:27,216 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:16:27,217 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:16:27,217 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:16:27,218 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:16:27,218 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:16:27,223 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:16:27,223 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:16:27,223 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:16:27,224 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:16:27,225 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:16:27,225 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:16:27,231 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:16:27,231 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:16:27
2020-07-22 15:16:27,231 handle_main.py[line:50] INFO 时间间隔为(s): 143
2020-07-22 15:16:27,231 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:16:27,232 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-22 15:17:27,234 handle_main.py[line:61] INFO 等待时间结束
2020-07-22 15:17:27,234 handle_main.py[line:62] INFO 提取日志，并转码
2020-07-22 15:17:27,234 public.py[line:62] INFO adb shell 命令：adb -s JYZ9591 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_15_17_27
2020-07-22 15:17:38,854 public.py[line:21] INFO 日志转换到了结尾
2020-07-22 15:17:38,854 handle_main.py[line:65] INFO 开始正则匹配
2020-07-22 15:17:38,948 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:17:38,948 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:17:38,948 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:17:38,948 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:17:38,950 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:17:38,950 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:17:38,997 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:17:38,997 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:17:38,997 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:17:38,997 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:17:38,999 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:17:38,999 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:17:39,005 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:17:39,005 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:17:39,005 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:17:39,006 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:17:39,007 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:17:39,007 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:17:39,012 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:17:39,012 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:17:39,013 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:17:39,013 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:17:39,013 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:17:39,013 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:17:39,016 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:17:39,016 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:17:39,016 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:17:39,016 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:17:39,018 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:17:39,018 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:17:39,020 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:17:39,020 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:17:39
2020-07-22 15:17:39,020 handle_main.py[line:50] INFO 时间间隔为(s): 215
2020-07-22 15:17:39,020 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:17:39,020 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-22 15:18:39,022 handle_main.py[line:61] INFO 等待时间结束
2020-07-22 15:18:39,022 handle_main.py[line:62] INFO 提取日志，并转码
2020-07-22 15:18:39,022 public.py[line:62] INFO adb shell 命令：adb -s JYZ9591 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_15_18_39
2020-07-22 15:18:50,850 public.py[line:21] INFO 日志转换到了结尾
2020-07-22 15:18:50,850 handle_main.py[line:65] INFO 开始正则匹配
2020-07-22 15:18:50,945 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:18:50,945 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:18:50,946 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:18:50,946 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:18:50,948 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:18:50,949 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:18:50,953 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:18:50,953 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:18:50,953 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:18:50,953 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:18:50,954 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:18:50,954 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:18:50,959 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:18:50,960 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:18:50,960 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:18:50,960 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:18:50,963 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:18:50,963 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:18:50,968 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:18:50,968 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:18:50,968 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:18:50,968 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:18:50,970 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:18:50,970 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:18:50,975 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:18:50,975 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:18:50,975 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:18:50,975 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:18:50,976 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:18:50,977 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:18:50,981 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:18:50,981 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:18:50
2020-07-22 15:18:50,981 handle_main.py[line:50] INFO 时间间隔为(s): 286
2020-07-22 15:18:50,982 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:18:50,982 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-22 15:19:50,983 handle_main.py[line:61] INFO 等待时间结束
2020-07-22 15:19:50,983 handle_main.py[line:62] INFO 提取日志，并转码
2020-07-22 15:19:50,984 public.py[line:62] INFO adb shell 命令：adb -s JYZ9591 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_15_19_50
2020-07-22 15:20:02,656 public.py[line:21] INFO 日志转换到了结尾
2020-07-22 15:20:02,656 handle_main.py[line:65] INFO 开始正则匹配
2020-07-22 15:20:02,756 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:20:02,756 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:20:02,756 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:20:02,757 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:20:02,761 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:20:02,761 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:20:02,765 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:20:02,765 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:20:02,765 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:20:02,765 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:20:02,767 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:20:02,767 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:20:02,772 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:20:02,772 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:20:02,772 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:20:02,772 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:20:02,775 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:20:02,775 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:20:02,780 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:20:02,780 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:20:02,781 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:20:02,781 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:20:02,782 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:20:02,782 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:20:02,785 public.py[line:191] INFO 正则匹配到了
2020-07-22 15:20:02,786 public.py[line:192] INFO matchObj_wakeup.group:  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:20:02,786 public.py[line:193] INFO matchObj_wakeup.group(1): (  423:546937053664) DEBUG  
2020-07-22 15:20:02,786 public.py[line:194] INFO 输出该行：  /uaibot(  423:546937053664) DEBUG  [app][onWakeup] app - wakeup: xiaoyouxiaoyou
2020-07-22 15:20:02,787 public.py[line:129] INFO 将结果临时保存到txt中
2020-07-22 15:20:02,787 public.py[line:130] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:20:02,792 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:20:02,793 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:20:02
2020-07-22 15:20:02,793 handle_main.py[line:50] INFO 时间间隔为(s): 358
2020-07-22 15:20:02,793 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:20:02,793 handle_main.py[line:55] INFO 时间间隔超过了要测试的时间，退出循环
2020-07-22 15:20:02,793 public.py[line:138] INFO 处理结果
2020-07-22 15:20:02,793 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,793 public.py[line:149] INFO 列表中没有该行，保存........
2020-07-22 15:20:02,793 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,793 public.py[line:149] INFO 列表中没有该行，保存........
2020-07-22 15:20:02,794 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,794 public.py[line:149] INFO 列表中没有该行，保存........
2020-07-22 15:20:02,794 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,794 public.py[line:147] INFO 列表中已存在该行，略过
2020-07-22 15:20:02,794 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,794 public.py[line:147] INFO 列表中已存在该行，略过
2020-07-22 15:20:02,794 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,794 public.py[line:147] INFO 列表中已存在该行，略过
2020-07-22 15:20:02,794 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,794 public.py[line:147] INFO 列表中已存在该行，略过
2020-07-22 15:20:02,794 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,794 public.py[line:147] INFO 列表中已存在该行，略过
2020-07-22 15:20:02,794 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,794 public.py[line:147] INFO 列表中已存在该行，略过
2020-07-22 15:20:02,794 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,794 public.py[line:149] INFO 列表中没有该行，保存........
2020-07-22 15:20:02,794 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,795 public.py[line:149] INFO 列表中没有该行，保存........
2020-07-22 15:20:02,795 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,795 public.py[line:147] INFO 列表中已存在该行，略过
2020-07-22 15:20:02,795 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,795 public.py[line:147] INFO 列表中已存在该行，略过
2020-07-22 15:20:02,795 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,795 public.py[line:147] INFO 列表中已存在该行，略过
2020-07-22 15:20:02,795 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,795 public.py[line:147] INFO 列表中已存在该行，略过
2020-07-22 15:20:02,795 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,795 public.py[line:147] INFO 列表中已存在该行，略过
2020-07-22 15:20:02,795 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,795 public.py[line:147] INFO 列表中已存在该行，略过
2020-07-22 15:20:02,795 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,795 public.py[line:147] INFO 列表中已存在该行，略过
2020-07-22 15:20:02,795 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,795 public.py[line:147] INFO 列表中已存在该行，略过
2020-07-22 15:20:02,795 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,796 public.py[line:147] INFO 列表中已存在该行，略过
2020-07-22 15:20:02,796 public.py[line:145] INFO 检查列表中是否有重复的
2020-07-22 15:20:02,796 public.py[line:147] INFO 列表中已存在该行，略过
2020-07-22 15:20:02,797 public.py[line:153] INFO 保存最终结果到: D:\Python_Project\False_wake\Logs/result.txt
2020-07-22 15:20:02,797 public.py[line:104] INFO result_tmp_path: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:20:02,798 public.py[line:106] INFO resul_tmp_path存在，移动并重命名
2020-07-22 15:20:02,798 public.py[line:114] INFO result_path: D:\Python_Project\False_wake\Logs/result.txt
2020-07-22 15:20:02,798 public.py[line:116] INFO result_path 存在，移动名重命名
2020-07-22 15:20:02,799 send_email.py[line:22] INFO 开始发送邮件
2020-07-22 15:20:02,799 send_email.py[line:39] INFO 存在误唤醒，发送格式1
2020-07-22 15:20:02,800 send_email.py[line:78] INFO 存在误唤醒，发送附件
2020-07-22 15:20:02,800 send_email.py[line:88] INFO 没有误唤醒，不发送附件
2020-07-22 15:20:04,021 send_email.py[line:101] INFO 邮件发送成功
2020-07-22 15:20:04,021 send_email.py[line:107] INFO 结束发送邮件
2020-07-22 15:35:40,920 ui.py[line:45] INFO 点击开始测试按钮，开始测试
2020-07-22 15:35:40,920 ui.py[line:48] INFO 获取到的日志提取间隔是： 1
2020-07-22 15:35:40,920 ui.py[line:51] INFO 获取到的测试总时长是： 5
2020-07-22 15:35:40,920 ui.py[line:54] INFO 获取到的设备id： JYZ9591
2020-07-22 15:35:40,920 ui.py[line:57] INFO 获取到的email: 319910390@qq.com;wei_wei1992@yeah.net
2020-07-22 15:35:40,921 ui.py[line:59] INFO 切割后的email: ['319910390@qq.com', 'wei_wei1992@yeah.net']
2020-07-22 15:35:40,921 handle_main.py[line:18] INFO 开始处理
2020-07-22 15:35:40,921 handle_main.py[line:19] INFO handle接收到的log_time(分钟)：1
2020-07-22 15:35:40,922 handle_main.py[line:20] INFO handle接收到的test_time(h):5
2020-07-22 15:35:40,922 handle_main.py[line:21] INFO handle接收到的device_id： JYZ9591
2020-07-22 15:35:40,922 handle_main.py[line:22] INFO handle接收到的email: ['319910390@qq.com', 'wei_wei1992@yeah.net']
2020-07-22 15:35:40,922 handle_main.py[line:24] INFO log_time分钟转换为秒： 60
2020-07-22 15:35:40,922 handle_main.py[line:26] INFO test_time小时转换为秒： 300
2020-07-22 15:35:40,924 handle_main.py[line:36] INFO 首先先记录下开始时间为： 2020-07-22 15:35:40
2020-07-22 15:35:40,924 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:35:40,924 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:35:40
2020-07-22 15:35:40,924 handle_main.py[line:50] INFO 时间间隔为(s): 0
2020-07-22 15:35:40,924 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:35:40,925 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-22 15:36:40,926 handle_main.py[line:61] INFO 等待时间结束
2020-07-22 15:36:40,927 handle_main.py[line:62] INFO 提取日志，并转码
2020-07-22 15:36:40,927 public.py[line:62] INFO adb shell 命令：adb -s JYZ9591 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_15_36_40
2020-07-22 15:36:44,616 public.py[line:21] INFO 日志转换到了结尾
2020-07-22 15:36:44,616 handle_main.py[line:65] INFO 开始正则匹配
2020-07-22 15:36:44,621 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:36:44,621 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:36:44
2020-07-22 15:36:44,622 handle_main.py[line:50] INFO 时间间隔为(s): 64
2020-07-22 15:36:44,622 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:36:44,622 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-22 15:37:44,623 handle_main.py[line:61] INFO 等待时间结束
2020-07-22 15:37:44,623 handle_main.py[line:62] INFO 提取日志，并转码
2020-07-22 15:37:44,623 public.py[line:62] INFO adb shell 命令：adb -s JYZ9591 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_15_37_44
2020-07-22 15:37:48,237 public.py[line:21] INFO 日志转换到了结尾
2020-07-22 15:37:48,237 handle_main.py[line:65] INFO 开始正则匹配
2020-07-22 15:37:48,243 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:37:48,243 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:37:48
2020-07-22 15:37:48,243 handle_main.py[line:50] INFO 时间间隔为(s): 128
2020-07-22 15:37:48,243 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:37:48,243 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-22 15:38:48,245 handle_main.py[line:61] INFO 等待时间结束
2020-07-22 15:38:48,245 handle_main.py[line:62] INFO 提取日志，并转码
2020-07-22 15:38:48,245 public.py[line:62] INFO adb shell 命令：adb -s JYZ9591 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_15_38_48
2020-07-22 15:38:51,999 public.py[line:21] INFO 日志转换到了结尾
2020-07-22 15:38:51,999 handle_main.py[line:65] INFO 开始正则匹配
2020-07-22 15:38:52,005 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:38:52,005 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:38:52
2020-07-22 15:38:52,005 handle_main.py[line:50] INFO 时间间隔为(s): 192
2020-07-22 15:38:52,005 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:38:52,005 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-22 15:39:52,006 handle_main.py[line:61] INFO 等待时间结束
2020-07-22 15:39:52,006 handle_main.py[line:62] INFO 提取日志，并转码
2020-07-22 15:39:52,006 public.py[line:62] INFO adb shell 命令：adb -s JYZ9591 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_15_39_52
2020-07-22 15:39:55,653 public.py[line:21] INFO 日志转换到了结尾
2020-07-22 15:39:55,653 handle_main.py[line:65] INFO 开始正则匹配
2020-07-22 15:39:55,659 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:39:55,660 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:39:55
2020-07-22 15:39:55,660 handle_main.py[line:50] INFO 时间间隔为(s): 255
2020-07-22 15:39:55,660 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:39:55,660 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-22 15:40:55,661 handle_main.py[line:61] INFO 等待时间结束
2020-07-22 15:40:55,661 handle_main.py[line:62] INFO 提取日志，并转码
2020-07-22 15:40:55,662 public.py[line:62] INFO adb shell 命令：adb -s JYZ9591 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_15_40_55
2020-07-22 15:40:59,354 public.py[line:21] INFO 日志转换到了结尾
2020-07-22 15:40:59,354 handle_main.py[line:65] INFO 开始正则匹配
2020-07-22 15:40:59,361 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:40:59,361 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:40:59
2020-07-22 15:40:59,361 handle_main.py[line:50] INFO 时间间隔为(s): 319
2020-07-22 15:40:59,361 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:40:59,361 handle_main.py[line:55] INFO 时间间隔超过了要测试的时间，退出循环
2020-07-22 15:40:59,361 public.py[line:138] INFO 处理结果
2020-07-22 15:40:59,361 public.py[line:161] INFO result_tmp_path不存在: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:40:59,361 public.py[line:162] INFO 这说明没有被唤醒
2020-07-22 15:40:59,361 handle_main.py[line:70] INFO 没有唤醒文件
2020-07-22 15:40:59,361 send_email.py[line:22] INFO 开始发送邮件
2020-07-22 15:42:50,222 ui.py[line:45] INFO 点击开始测试按钮，开始测试
2020-07-22 15:42:50,222 ui.py[line:48] INFO 获取到的日志提取间隔是： 1
2020-07-22 15:42:50,222 ui.py[line:51] INFO 获取到的测试总时长是： 5
2020-07-22 15:42:50,223 ui.py[line:54] INFO 获取到的设备id： JYZ9591
2020-07-22 15:42:50,223 ui.py[line:57] INFO 获取到的email: 319910390@qq.com;wei_wei1992@yeah.net
2020-07-22 15:42:50,224 ui.py[line:59] INFO 切割后的email: ['319910390@qq.com', 'wei_wei1992@yeah.net']
2020-07-22 15:42:50,224 handle_main.py[line:18] INFO 开始处理
2020-07-22 15:42:50,224 handle_main.py[line:19] INFO handle接收到的log_time(分钟)：1
2020-07-22 15:42:50,225 handle_main.py[line:20] INFO handle接收到的test_time(h):5
2020-07-22 15:42:50,225 handle_main.py[line:21] INFO handle接收到的device_id： JYZ9591
2020-07-22 15:42:50,225 handle_main.py[line:22] INFO handle接收到的email: ['319910390@qq.com', 'wei_wei1992@yeah.net']
2020-07-22 15:42:50,225 handle_main.py[line:24] INFO log_time分钟转换为秒： 60
2020-07-22 15:42:50,225 handle_main.py[line:26] INFO test_time小时转换为秒： 300
2020-07-22 15:42:50,228 handle_main.py[line:36] INFO 首先先记录下开始时间为： 2020-07-22 15:42:50
2020-07-22 15:42:50,228 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:42:50,228 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:42:50
2020-07-22 15:42:50,228 handle_main.py[line:50] INFO 时间间隔为(s): 0
2020-07-22 15:42:50,228 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:42:50,229 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-22 15:43:50,230 handle_main.py[line:61] INFO 等待时间结束
2020-07-22 15:43:50,230 handle_main.py[line:62] INFO 提取日志，并转码
2020-07-22 15:43:50,230 public.py[line:62] INFO adb shell 命令：adb -s JYZ9591 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_15_43_50
2020-07-22 15:43:54,085 public.py[line:21] INFO 日志转换到了结尾
2020-07-22 15:43:54,085 handle_main.py[line:65] INFO 开始正则匹配
2020-07-22 15:43:54,094 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:43:54,094 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:43:54
2020-07-22 15:43:54,094 handle_main.py[line:50] INFO 时间间隔为(s): 64
2020-07-22 15:43:54,094 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:43:54,094 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-22 15:44:54,095 handle_main.py[line:61] INFO 等待时间结束
2020-07-22 15:44:54,095 handle_main.py[line:62] INFO 提取日志，并转码
2020-07-22 15:44:54,095 public.py[line:62] INFO adb shell 命令：adb -s JYZ9591 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_15_44_54
2020-07-22 15:44:58,210 public.py[line:21] INFO 日志转换到了结尾
2020-07-22 15:44:58,210 handle_main.py[line:65] INFO 开始正则匹配
2020-07-22 15:44:58,218 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:44:58,219 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:44:58
2020-07-22 15:44:58,219 handle_main.py[line:50] INFO 时间间隔为(s): 128
2020-07-22 15:44:58,219 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:44:58,219 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-22 15:45:58,220 handle_main.py[line:61] INFO 等待时间结束
2020-07-22 15:45:58,220 handle_main.py[line:62] INFO 提取日志，并转码
2020-07-22 15:45:58,220 public.py[line:62] INFO adb shell 命令：adb -s JYZ9591 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_15_45_58
2020-07-22 15:46:02,403 public.py[line:21] INFO 日志转换到了结尾
2020-07-22 15:46:02,403 handle_main.py[line:65] INFO 开始正则匹配
2020-07-22 15:46:02,419 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:46:02,419 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:46:02
2020-07-22 15:46:02,419 handle_main.py[line:50] INFO 时间间隔为(s): 192
2020-07-22 15:46:02,419 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:46:02,419 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-22 15:47:02,421 handle_main.py[line:61] INFO 等待时间结束
2020-07-22 15:47:02,421 handle_main.py[line:62] INFO 提取日志，并转码
2020-07-22 15:47:02,421 public.py[line:62] INFO adb shell 命令：adb -s JYZ9591 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_15_47_02
2020-07-22 15:47:06,338 public.py[line:21] INFO 日志转换到了结尾
2020-07-22 15:47:06,338 handle_main.py[line:65] INFO 开始正则匹配
2020-07-22 15:47:06,347 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:47:06,347 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:47:06
2020-07-22 15:47:06,347 handle_main.py[line:50] INFO 时间间隔为(s): 256
2020-07-22 15:47:06,347 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:47:06,347 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-22 15:48:06,348 handle_main.py[line:61] INFO 等待时间结束
2020-07-22 15:48:06,348 handle_main.py[line:62] INFO 提取日志，并转码
2020-07-22 15:48:06,348 public.py[line:62] INFO adb shell 命令：adb -s JYZ9591 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_22_15_48_06
2020-07-22 15:48:10,229 public.py[line:21] INFO 日志转换到了结尾
2020-07-22 15:48:10,229 handle_main.py[line:65] INFO 开始正则匹配
2020-07-22 15:48:10,239 handle_main.py[line:39] INFO 循环执行
2020-07-22 15:48:10,239 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-22 15:48:10
2020-07-22 15:48:10,239 handle_main.py[line:50] INFO 时间间隔为(s): 320
2020-07-22 15:48:10,239 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-22 15:48:10,239 handle_main.py[line:55] INFO 时间间隔超过了要测试的时间，退出循环
2020-07-22 15:48:10,239 public.py[line:138] INFO 处理结果
2020-07-22 15:48:10,239 public.py[line:161] INFO result_tmp_path不存在: D:\Python_Project\False_wake\Logs/result_tmp.txt
2020-07-22 15:48:10,239 public.py[line:162] INFO 这说明没有被唤醒
2020-07-22 15:48:10,240 handle_main.py[line:70] INFO 没有唤醒文件
2020-07-22 15:48:10,240 send_email.py[line:22] INFO 开始发送邮件
2020-07-22 15:48:10,240 send_email.py[line:61] INFO 不存在误唤醒，发送格式2
2020-07-22 15:48:10,240 send_email.py[line:90] INFO 没有误唤醒，不发送附件
2020-07-22 15:48:11,259 send_email.py[line:103] INFO 邮件发送成功
2020-07-22 15:48:11,259 send_email.py[line:109] INFO 结束发送邮件
2020-07-23 10:01:02,372 ui.py[line:45] INFO 点击开始测试按钮，开始测试
2020-07-23 10:01:02,409 ui.py[line:48] INFO 获取到的日志提取间隔是： 1
2020-07-23 10:01:02,409 ui.py[line:51] INFO 获取到的测试总时长是： 0.1
2020-07-23 10:01:02,409 ui.py[line:54] INFO 获取到的设备id： JYZ24612
2020-07-23 10:01:02,409 ui.py[line:57] INFO 获取到的email: 319910390@qq.com;
2020-07-23 10:01:02,410 ui.py[line:59] INFO 切割后的email: ['319910390@qq.com', '']
2020-07-23 10:01:02,411 handle_main.py[line:18] INFO 开始处理
2020-07-23 10:01:02,411 handle_main.py[line:19] INFO handle接收到的log_time(分钟)：1
2020-07-23 10:01:02,411 handle_main.py[line:20] INFO handle接收到的test_time(h):0.1
2020-07-23 10:01:02,411 handle_main.py[line:21] INFO handle接收到的device_id： JYZ24612
2020-07-23 10:01:02,411 handle_main.py[line:22] INFO handle接收到的email: ['319910390@qq.com', '']
2020-07-23 10:01:02,411 handle_main.py[line:24] INFO log_time分钟转换为秒： 60
2020-07-23 10:02:55,580 ui.py[line:45] INFO 点击开始测试按钮，开始测试
2020-07-23 10:02:55,580 ui.py[line:48] INFO 获取到的日志提取间隔是： 1
2020-07-23 10:02:55,581 ui.py[line:51] INFO 获取到的测试总时长是： 0.1
2020-07-23 10:02:55,581 ui.py[line:54] INFO 获取到的设备id： JYZ24612
2020-07-23 10:02:55,581 ui.py[line:57] INFO 获取到的email: 319910390@qq.com;wei_wei1992@yeah.net
2020-07-23 10:02:55,582 ui.py[line:59] INFO 切割后的email: ['319910390@qq.com', 'wei_wei1992@yeah.net']
2020-07-23 10:02:55,583 handle_main.py[line:18] INFO 开始处理
2020-07-23 10:02:55,583 handle_main.py[line:19] INFO handle接收到的log_time(分钟)：1
2020-07-23 10:02:55,669 handle_main.py[line:20] INFO handle接收到的test_time(h):0.1
2020-07-23 10:02:55,669 handle_main.py[line:21] INFO handle接收到的device_id： JYZ24612
2020-07-23 10:02:55,669 handle_main.py[line:22] INFO handle接收到的email: ['319910390@qq.com', 'wei_wei1992@yeah.net']
2020-07-23 10:02:55,669 handle_main.py[line:24] INFO log_time分钟转换为秒： 60
2020-07-23 10:02:55,670 handle_main.py[line:26] INFO test_time小时转换为秒： 360.0
2020-07-23 10:02:55,677 handle_main.py[line:36] INFO 首先先记录下开始时间为： 2020-07-23 10:02:55
2020-07-23 10:02:55,678 handle_main.py[line:39] INFO 循环执行
2020-07-23 10:02:55,679 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-23 10:02:55
2020-07-23 10:02:55,679 handle_main.py[line:50] INFO 时间间隔为(s): 0
2020-07-23 10:02:55,679 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-23 10:02:55,679 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
2020-07-23 10:03:55,681 handle_main.py[line:61] INFO 等待时间结束
2020-07-23 10:03:55,681 handle_main.py[line:62] INFO 提取日志，并转码
2020-07-23 10:03:55,681 public.py[line:62] INFO adb shell 命令：adb -s JYZ24612 pull /tmp/uai_log.txt D:\Python_Project\False_wake/Logs/original_log/uai_log_2020_07_23_10_03_55
2020-07-23 10:03:59,941 public.py[line:21] INFO 日志转换到了结尾
2020-07-23 10:03:59,941 handle_main.py[line:65] INFO 开始正则匹配
2020-07-23 10:03:59,956 handle_main.py[line:39] INFO 循环执行
2020-07-23 10:03:59,956 handle_main.py[line:47] INFO 记录下当前时间为： 2020-07-23 10:03:59
2020-07-23 10:03:59,956 handle_main.py[line:50] INFO 时间间隔为(s): 64
2020-07-23 10:03:59,956 handle_main.py[line:52] INFO 判断时间间隔是否超过了要测试的时间
2020-07-23 10:03:59,956 handle_main.py[line:58] INFO 时间间隔没有超过要测试的时间，等待日志时间后，接着执行
